{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"messagesContainer\"];\nconst _c1 = [\"messageInput\"];\nfunction ChatWindowComponent_div_0_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r2 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getRoomStatusText(room_r2), \" \");\n  }\n}\nfunction ChatWindowComponent_div_0_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const room_r2 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", room_r2.participants.length, \" members \");\n  }\n}\nfunction ChatWindowComponent_div_0_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelement(1, \"img\", 37);\n    i0.ɵɵelementStart(2, \"span\", 38);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r2.getSenderAvatar(message_r4.senderId), i0.ɵɵsanitizeUrl)(\"alt\", ctx_r2.getSenderName(message_r4.senderId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.getSenderName(message_r4.senderId));\n  }\n}\nfunction ChatWindowComponent_div_0_div_20_i_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 39);\n  }\n}\nfunction ChatWindowComponent_div_0_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31);\n    i0.ɵɵtemplate(2, ChatWindowComponent_div_0_div_20_div_2_Template, 4, 3, \"div\", 32);\n    i0.ɵɵelementStart(3, \"div\", 33)(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 34);\n    i0.ɵɵtext(7);\n    i0.ɵɵtemplate(8, ChatWindowComponent_div_0_div_20_i_8_Template, 1, 0, \"i\", 35);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"own-message\", message_r4.senderId === ctx_r2.currentUser.id);\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"own\", message_r4.senderId === ctx_r2.currentUser.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", message_r4.senderId !== ctx_r2.currentUser.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r4.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.formatMessageTime(message_r4.timestamp), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", message_r4.senderId === ctx_r2.currentUser.id);\n  }\n}\nfunction ChatWindowComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"div\", 8)(5, \"h3\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 9);\n    i0.ɵɵtemplate(8, ChatWindowComponent_div_0_span_8_Template, 2, 1, \"span\", 10)(9, ChatWindowComponent_div_0_span_9_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 11)(11, \"button\", 12);\n    i0.ɵɵelement(12, \"i\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 14);\n    i0.ɵɵelement(14, \"i\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 16);\n    i0.ɵɵelement(16, \"i\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 18, 1)(19, \"div\", 19);\n    i0.ɵɵtemplate(20, ChatWindowComponent_div_0_div_20_Template, 9, 8, \"div\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"div\", 21)(22, \"div\", 22)(23, \"button\", 23);\n    i0.ɵɵelement(24, \"i\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"input\", 25, 2);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatWindowComponent_div_0_Template_input_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.newMessage, $event) || (ctx_r2.newMessage = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"keydown.enter\", function ChatWindowComponent_div_0_Template_input_keydown_enter_25_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sendMessage());\n    })(\"input\", function ChatWindowComponent_div_0_Template_input_input_25_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onTyping());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"button\", 26);\n    i0.ɵɵelement(28, \"i\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function ChatWindowComponent_div_0_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sendMessage());\n    });\n    i0.ɵɵelement(30, \"i\", 29);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const room_r2 = ctx.ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r2.getRoomAvatar(room_r2), i0.ɵɵsanitizeUrl)(\"alt\", room_r2.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(room_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", room_r2.type === \"direct\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", room_r2.type === \"group\");\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", room_r2.messages)(\"ngForTrackBy\", ctx_r2.trackByMessageId);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.newMessage);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.newMessage.trim());\n  }\n}\nfunction ChatWindowComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"div\", 41);\n    i0.ɵɵelement(2, \"i\", 42);\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Welcome to ChatApp\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"Select a conversation to start chatting\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class ChatWindowComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.newMessage = '';\n    this.shouldScrollToBottom = false;\n    this.activeRoom$ = this.chatService.getActiveRoom();\n    this.currentUser = this.chatService.getCurrentUser();\n  }\n  ngOnInit() {\n    this.activeRoom$.subscribe(() => {\n      this.shouldScrollToBottom = true;\n    });\n  }\n  ngAfterViewChecked() {\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n  sendMessage() {\n    if (this.newMessage.trim()) {\n      this.chatService.getActiveRoom().subscribe(room => {\n        if (room) {\n          this.chatService.sendMessage(room.id, this.newMessage);\n          this.newMessage = '';\n          this.shouldScrollToBottom = true;\n        }\n      }).unsubscribe();\n    }\n  }\n  onTyping() {\n    this.chatService.getActiveRoom().subscribe(room => {\n      if (room) {\n        this.chatService.startTyping(room.id);\n        // Stop typing after 3 seconds of inactivity\n        setTimeout(() => {\n          this.chatService.stopTyping(room.id);\n        }, 3000);\n      }\n    }).unsubscribe();\n  }\n  getRoomAvatar(room) {\n    if (room.type === 'group') {\n      return room.avatar || 'https://images.pexels.com/photos/1181263/pexels-photo-1181263.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&dpr=1';\n    } else {\n      const otherParticipant = room.participants.find(p => p.id !== this.currentUser.id);\n      return otherParticipant?.avatar || 'https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&dpr=1';\n    }\n  }\n  getRoomStatusText(room) {\n    if (room.type === 'group') return '';\n    const otherParticipant = room.participants.find(p => p.id !== this.currentUser.id);\n    if (!otherParticipant) return '';\n    switch (otherParticipant.status) {\n      case 'online':\n        return 'Online';\n      case 'away':\n        return 'Away';\n      case 'offline':\n        if (otherParticipant.lastSeen) {\n          const now = new Date();\n          const diff = now.getTime() - otherParticipant.lastSeen.getTime();\n          const hours = Math.floor(diff / 3600000);\n          const days = Math.floor(diff / 86400000);\n          if (hours < 1) return 'Last seen recently';\n          if (hours < 24) return `Last seen ${hours}h ago`;\n          return `Last seen ${days}d ago`;\n        }\n        return 'Offline';\n      default:\n        return '';\n    }\n  }\n  getSenderAvatar(senderId) {\n    const user = this.chatService.getUserById(senderId);\n    return user?.avatar || 'https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&dpr=1';\n  }\n  getSenderName(senderId) {\n    const user = this.chatService.getUserById(senderId);\n    return user?.name || 'Unknown User';\n  }\n  formatMessageTime(timestamp) {\n    const now = new Date();\n    const diff = now.getTime() - timestamp.getTime();\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    if (minutes < 1) return 'now';\n    if (minutes < 60) return `${minutes}m ago`;\n    if (hours < 24) return timestamp.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    return timestamp.toLocaleDateString();\n  }\n  trackByMessageId(index, message) {\n    return message.id;\n  }\n  scrollToBottom() {\n    if (this.messagesContainer) {\n      const element = this.messagesContainer.nativeElement;\n      element.scrollTop = element.scrollHeight;\n    }\n  }\n  static {\n    this.ɵfac = function ChatWindowComponent_Factory(t) {\n      return new (t || ChatWindowComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatWindowComponent,\n      selectors: [[\"app-chat-window\"]],\n      viewQuery: function ChatWindowComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messagesContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageInput = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 4,\n      consts: [[\"noRoomSelected\", \"\"], [\"messagesContainer\", \"\"], [\"messageInput\", \"\"], [\"class\", \"chat-window\", 4, \"ngIf\", \"ngIfElse\"], [1, \"chat-window\"], [1, \"chat-header\"], [1, \"room-info\"], [1, \"room-avatar\", 3, \"src\", \"alt\"], [1, \"room-details\"], [1, \"room-status\"], [4, \"ngIf\"], [1, \"chat-actions\"], [\"title\", \"Voice Call\", 1, \"action-btn\"], [1, \"fas\", \"fa-phone\"], [\"title\", \"Video Call\", 1, \"action-btn\"], [1, \"fas\", \"fa-video\"], [\"title\", \"More Options\", 1, \"action-btn\"], [1, \"fas\", \"fa-ellipsis-v\"], [1, \"messages-container\"], [1, \"messages-list\"], [\"class\", \"message-wrapper\", 3, \"own-message\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"message-input-container\"], [1, \"input-wrapper\"], [\"title\", \"Attach File\", 1, \"attachment-btn\"], [1, \"fas\", \"fa-paperclip\"], [\"type\", \"text\", \"placeholder\", \"Type a message...\", 1, \"message-input\", 3, \"ngModelChange\", \"keydown.enter\", \"input\", \"ngModel\"], [\"title\", \"Add Emoji\", 1, \"emoji-btn\"], [1, \"fas\", \"fa-smile\"], [\"title\", \"Send Message\", 1, \"send-btn\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-paper-plane\"], [1, \"message-wrapper\"], [1, \"message-bubble\"], [\"class\", \"sender-info\", 4, \"ngIf\"], [1, \"message-content\"], [1, \"message-time\"], [\"class\", \"fas fa-check message-status\", 4, \"ngIf\"], [1, \"sender-info\"], [1, \"sender-avatar\", 3, \"src\", \"alt\"], [1, \"sender-name\"], [1, \"fas\", \"fa-check\", \"message-status\"], [1, \"no-room-selected\"], [1, \"welcome-content\"], [1, \"fas\", \"fa-comments\", \"welcome-icon\"]],\n      template: function ChatWindowComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, ChatWindowComponent_div_0_Template, 31, 9, \"div\", 3);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵtemplate(2, ChatWindowComponent_ng_template_2_Template, 7, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const noRoomSelected_r5 = i0.ɵɵreference(3);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.activeRoom$))(\"ngIfElse\", noRoomSelected_r5);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.AsyncPipe, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".chat-window[_ngcontent-%COMP%] {\\n      flex: 1;\\n      display: flex;\\n      flex-direction: column;\\n      height: 100vh;\\n      background: white;\\n    }\\n\\n    .chat-header[_ngcontent-%COMP%] {\\n      padding: 16px 24px;\\n      border-bottom: 1px solid #e5e7eb;\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      background: white;\\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\\n    }\\n\\n    .room-info[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n      gap: 12px;\\n    }\\n\\n    .room-avatar[_ngcontent-%COMP%] {\\n      width: 40px;\\n      height: 40px;\\n      border-radius: 50%;\\n      object-fit: cover;\\n    }\\n\\n    .room-details[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n      margin: 0;\\n      font-size: 16px;\\n      font-weight: 600;\\n      color: #111827;\\n    }\\n\\n    .room-status[_ngcontent-%COMP%] {\\n      margin: 0;\\n      font-size: 12px;\\n      color: #6b7280;\\n    }\\n\\n    .chat-actions[_ngcontent-%COMP%] {\\n      display: flex;\\n      gap: 8px;\\n    }\\n\\n    .action-btn[_ngcontent-%COMP%] {\\n      width: 36px;\\n      height: 36px;\\n      border: none;\\n      background: #f3f4f6;\\n      color: #6b7280;\\n      border-radius: 50%;\\n      cursor: pointer;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      transition: all 0.2s ease;\\n    }\\n\\n    .action-btn[_ngcontent-%COMP%]:hover {\\n      background: #e5e7eb;\\n      color: #374151;\\n    }\\n\\n    .messages-container[_ngcontent-%COMP%] {\\n      flex: 1;\\n      overflow-y: auto;\\n      padding: 16px 24px;\\n      background: #f9fafb;\\n    }\\n\\n    .messages-list[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n      gap: 16px;\\n    }\\n\\n    .message-wrapper[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n    }\\n\\n    .message-wrapper.own-message[_ngcontent-%COMP%] {\\n      align-items: flex-end;\\n    }\\n\\n    .message-bubble[_ngcontent-%COMP%] {\\n      max-width: 70%;\\n      background: white;\\n      border-radius: 18px;\\n      padding: 12px 16px;\\n      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\\n      animation: _ngcontent-%COMP%_fadeIn 0.3s ease;\\n    }\\n\\n    .message-bubble.own[_ngcontent-%COMP%] {\\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n      color: white;\\n    }\\n\\n    .sender-info[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n      gap: 8px;\\n      margin-bottom: 8px;\\n    }\\n\\n    .sender-avatar[_ngcontent-%COMP%] {\\n      width: 20px;\\n      height: 20px;\\n      border-radius: 50%;\\n      object-fit: cover;\\n    }\\n\\n    .sender-name[_ngcontent-%COMP%] {\\n      font-size: 12px;\\n      font-weight: 600;\\n      color: #667eea;\\n    }\\n\\n    .message-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n      margin: 0;\\n      line-height: 1.4;\\n      word-wrap: break-word;\\n    }\\n\\n    .message-time[_ngcontent-%COMP%] {\\n      font-size: 11px;\\n      color: #9ca3af;\\n      margin-top: 4px;\\n      display: flex;\\n      align-items: center;\\n      gap: 4px;\\n      justify-content: flex-end;\\n    }\\n\\n    .message-bubble.own[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n      color: rgba(255, 255, 255, 0.7);\\n    }\\n\\n    .message-status[_ngcontent-%COMP%] {\\n      font-size: 10px;\\n    }\\n\\n    .message-input-container[_ngcontent-%COMP%] {\\n      padding: 16px 24px;\\n      border-top: 1px solid #e5e7eb;\\n      background: white;\\n    }\\n\\n    .input-wrapper[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n      gap: 12px;\\n      background: #f3f4f6;\\n      border-radius: 24px;\\n      padding: 8px 16px;\\n    }\\n\\n    .attachment-btn[_ngcontent-%COMP%], .emoji-btn[_ngcontent-%COMP%] {\\n      width: 32px;\\n      height: 32px;\\n      border: none;\\n      background: transparent;\\n      color: #6b7280;\\n      border-radius: 50%;\\n      cursor: pointer;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      transition: all 0.2s ease;\\n    }\\n\\n    .attachment-btn[_ngcontent-%COMP%]:hover, .emoji-btn[_ngcontent-%COMP%]:hover {\\n      background: #e5e7eb;\\n      color: #374151;\\n    }\\n\\n    .message-input[_ngcontent-%COMP%] {\\n      flex: 1;\\n      border: none;\\n      background: transparent;\\n      font-size: 14px;\\n      padding: 8px 0;\\n      outline: none;\\n    }\\n\\n    .message-input[_ngcontent-%COMP%]::placeholder {\\n      color: #9ca3af;\\n    }\\n\\n    .send-btn[_ngcontent-%COMP%] {\\n      width: 32px;\\n      height: 32px;\\n      border: none;\\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n      color: white;\\n      border-radius: 50%;\\n      cursor: pointer;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      transition: all 0.2s ease;\\n    }\\n\\n    .send-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n      transform: scale(1.05);\\n      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\\n    }\\n\\n    .send-btn[_ngcontent-%COMP%]:disabled {\\n      opacity: 0.5;\\n      cursor: not-allowed;\\n    }\\n\\n    .no-room-selected[_ngcontent-%COMP%] {\\n      flex: 1;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      background: #f9fafb;\\n    }\\n\\n    .welcome-content[_ngcontent-%COMP%] {\\n      text-align: center;\\n      color: #6b7280;\\n    }\\n\\n    .welcome-icon[_ngcontent-%COMP%] {\\n      font-size: 64px;\\n      margin-bottom: 16px;\\n      color: #d1d5db;\\n    }\\n\\n    .welcome-content[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n      font-size: 24px;\\n      font-weight: 600;\\n      margin: 0 0 8px 0;\\n      color: #374151;\\n    }\\n\\n    .welcome-content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n      font-size: 16px;\\n      margin: 0;\\n    }\\n\\n    @keyframes _ngcontent-%COMP%_fadeIn {\\n      from { opacity: 0; transform: translateY(10px); }\\n      to { opacity: 1; transform: translateY(0); }\\n    }\\n\\n    @media (max-width: 768px) {\\n      .chat-header[_ngcontent-%COMP%] {\\n        padding: 12px 16px;\\n      }\\n\\n      .messages-container[_ngcontent-%COMP%] {\\n        padding: 12px 16px;\\n      }\\n\\n      .message-input-container[_ngcontent-%COMP%] {\\n        padding: 12px 16px;\\n      }\\n\\n      .message-bubble[_ngcontent-%COMP%] {\\n        max-width: 85%;\\n      }\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jaGF0LXdpbmRvdy9jaGF0LXdpbmRvdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUNJO01BQ0UsT0FBTztNQUNQLGFBQWE7TUFDYixzQkFBc0I7TUFDdEIsYUFBYTtNQUNiLGlCQUFpQjtJQUNuQjs7SUFFQTtNQUNFLGtCQUFrQjtNQUNsQixnQ0FBZ0M7TUFDaEMsYUFBYTtNQUNiLG1CQUFtQjtNQUNuQiw4QkFBOEI7TUFDOUIsaUJBQWlCO01BQ2pCLHlDQUF5QztJQUMzQzs7SUFFQTtNQUNFLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsU0FBUztJQUNYOztJQUVBO01BQ0UsV0FBVztNQUNYLFlBQVk7TUFDWixrQkFBa0I7TUFDbEIsaUJBQWlCO0lBQ25COztJQUVBO01BQ0UsU0FBUztNQUNULGVBQWU7TUFDZixnQkFBZ0I7TUFDaEIsY0FBYztJQUNoQjs7SUFFQTtNQUNFLFNBQVM7TUFDVCxlQUFlO01BQ2YsY0FBYztJQUNoQjs7SUFFQTtNQUNFLGFBQWE7TUFDYixRQUFRO0lBQ1Y7O0lBRUE7TUFDRSxXQUFXO01BQ1gsWUFBWTtNQUNaLFlBQVk7TUFDWixtQkFBbUI7TUFDbkIsY0FBYztNQUNkLGtCQUFrQjtNQUNsQixlQUFlO01BQ2YsYUFBYTtNQUNiLG1CQUFtQjtNQUNuQix1QkFBdUI7TUFDdkIseUJBQXlCO0lBQzNCOztJQUVBO01BQ0UsbUJBQW1CO01BQ25CLGNBQWM7SUFDaEI7O0lBRUE7TUFDRSxPQUFPO01BQ1AsZ0JBQWdCO01BQ2hCLGtCQUFrQjtNQUNsQixtQkFBbUI7SUFDckI7O0lBRUE7TUFDRSxhQUFhO01BQ2Isc0JBQXNCO01BQ3RCLFNBQVM7SUFDWDs7SUFFQTtNQUNFLGFBQWE7TUFDYixzQkFBc0I7SUFDeEI7O0lBRUE7TUFDRSxxQkFBcUI7SUFDdkI7O0lBRUE7TUFDRSxjQUFjO01BQ2QsaUJBQWlCO01BQ2pCLG1CQUFtQjtNQUNuQixrQkFBa0I7TUFDbEIsd0NBQXdDO01BQ3hDLDJCQUEyQjtJQUM3Qjs7SUFFQTtNQUNFLDZEQUE2RDtNQUM3RCxZQUFZO0lBQ2Q7O0lBRUE7TUFDRSxhQUFhO01BQ2IsbUJBQW1CO01BQ25CLFFBQVE7TUFDUixrQkFBa0I7SUFDcEI7O0lBRUE7TUFDRSxXQUFXO01BQ1gsWUFBWTtNQUNaLGtCQUFrQjtNQUNsQixpQkFBaUI7SUFDbkI7O0lBRUE7TUFDRSxlQUFlO01BQ2YsZ0JBQWdCO01BQ2hCLGNBQWM7SUFDaEI7O0lBRUE7TUFDRSxTQUFTO01BQ1QsZ0JBQWdCO01BQ2hCLHFCQUFxQjtJQUN2Qjs7SUFFQTtNQUNFLGVBQWU7TUFDZixjQUFjO01BQ2QsZUFBZTtNQUNmLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsUUFBUTtNQUNSLHlCQUF5QjtJQUMzQjs7SUFFQTtNQUNFLCtCQUErQjtJQUNqQzs7SUFFQTtNQUNFLGVBQWU7SUFDakI7O0lBRUE7TUFDRSxrQkFBa0I7TUFDbEIsNkJBQTZCO01BQzdCLGlCQUFpQjtJQUNuQjs7SUFFQTtNQUNFLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsU0FBUztNQUNULG1CQUFtQjtNQUNuQixtQkFBbUI7TUFDbkIsaUJBQWlCO0lBQ25COztJQUVBO01BQ0UsV0FBVztNQUNYLFlBQVk7TUFDWixZQUFZO01BQ1osdUJBQXVCO01BQ3ZCLGNBQWM7TUFDZCxrQkFBa0I7TUFDbEIsZUFBZTtNQUNmLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsdUJBQXVCO01BQ3ZCLHlCQUF5QjtJQUMzQjs7SUFFQTtNQUNFLG1CQUFtQjtNQUNuQixjQUFjO0lBQ2hCOztJQUVBO01BQ0UsT0FBTztNQUNQLFlBQVk7TUFDWix1QkFBdUI7TUFDdkIsZUFBZTtNQUNmLGNBQWM7TUFDZCxhQUFhO0lBQ2Y7O0lBRUE7TUFDRSxjQUFjO0lBQ2hCOztJQUVBO01BQ0UsV0FBVztNQUNYLFlBQVk7TUFDWixZQUFZO01BQ1osNkRBQTZEO01BQzdELFlBQVk7TUFDWixrQkFBa0I7TUFDbEIsZUFBZTtNQUNmLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsdUJBQXVCO01BQ3ZCLHlCQUF5QjtJQUMzQjs7SUFFQTtNQUNFLHNCQUFzQjtNQUN0QiwrQ0FBK0M7SUFDakQ7O0lBRUE7TUFDRSxZQUFZO01BQ1osbUJBQW1CO0lBQ3JCOztJQUVBO01BQ0UsT0FBTztNQUNQLGFBQWE7TUFDYixtQkFBbUI7TUFDbkIsdUJBQXVCO01BQ3ZCLG1CQUFtQjtJQUNyQjs7SUFFQTtNQUNFLGtCQUFrQjtNQUNsQixjQUFjO0lBQ2hCOztJQUVBO01BQ0UsZUFBZTtNQUNmLG1CQUFtQjtNQUNuQixjQUFjO0lBQ2hCOztJQUVBO01BQ0UsZUFBZTtNQUNmLGdCQUFnQjtNQUNoQixpQkFBaUI7TUFDakIsY0FBYztJQUNoQjs7SUFFQTtNQUNFLGVBQWU7TUFDZixTQUFTO0lBQ1g7O0lBRUE7TUFDRSxPQUFPLFVBQVUsRUFBRSwyQkFBMkIsRUFBRTtNQUNoRCxLQUFLLFVBQVUsRUFBRSx3QkFBd0IsRUFBRTtJQUM3Qzs7SUFFQTtNQUNFO1FBQ0Usa0JBQWtCO01BQ3BCOztNQUVBO1FBQ0Usa0JBQWtCO01BQ3BCOztNQUVBO1FBQ0Usa0JBQWtCO01BQ3BCOztNQUVBO1FBQ0UsY0FBYztNQUNoQjtJQUNGIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgLmNoYXQtd2luZG93IHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICB9XG5cbiAgICAuY2hhdC1oZWFkZXIge1xuICAgICAgcGFkZGluZzogMTZweCAyNHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNWU3ZWI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gICAgfVxuXG4gICAgLnJvb20taW5mbyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGdhcDogMTJweDtcbiAgICB9XG5cbiAgICAucm9vbS1hdmF0YXIge1xuICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB9XG5cbiAgICAucm9vbS1kZXRhaWxzIGgzIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICBjb2xvcjogIzExMTgyNztcbiAgICB9XG5cbiAgICAucm9vbS1zdGF0dXMge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgfVxuXG4gICAgLmNoYXQtYWN0aW9ucyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiA4cHg7XG4gICAgfVxuXG4gICAgLmFjdGlvbi1idG4ge1xuICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICBoZWlnaHQ6IDM2cHg7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjNmNGY2O1xuICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgICB9XG5cbiAgICAuYWN0aW9uLWJ0bjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZTVlN2ViO1xuICAgICAgY29sb3I6ICMzNzQxNTE7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2VzLWNvbnRhaW5lciB7XG4gICAgICBmbGV4OiAxO1xuICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgIHBhZGRpbmc6IDE2cHggMjRweDtcbiAgICAgIGJhY2tncm91bmQ6ICNmOWZhZmI7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2VzLWxpc3Qge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDE2cHg7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2Utd3JhcHBlciB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB9XG5cbiAgICAubWVzc2FnZS13cmFwcGVyLm93bi1tZXNzYWdlIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICB9XG5cbiAgICAubWVzc2FnZS1idWJibGUge1xuICAgICAgbWF4LXdpZHRoOiA3MCU7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICAgICBib3gtc2hhZG93OiAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgYW5pbWF0aW9uOiBmYWRlSW4gMC4zcyBlYXNlO1xuICAgIH1cblxuICAgIC5tZXNzYWdlLWJ1YmJsZS5vd24ge1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzY2N2VlYSAwJSwgIzc2NGJhMiAxMDAlKTtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG5cbiAgICAuc2VuZGVyLWluZm8ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBnYXA6IDhweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICB9XG5cbiAgICAuc2VuZGVyLWF2YXRhciB7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIH1cblxuICAgIC5zZW5kZXItbmFtZSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgY29sb3I6ICM2NjdlZWE7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2UtY29udGVudCBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2UtdGltZSB7XG4gICAgICBmb250LXNpemU6IDExcHg7XG4gICAgICBjb2xvcjogIzljYTNhZjtcbiAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZ2FwOiA0cHg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAgIH1cblxuICAgIC5tZXNzYWdlLWJ1YmJsZS5vd24gLm1lc3NhZ2UtdGltZSB7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpO1xuICAgIH1cblxuICAgIC5tZXNzYWdlLXN0YXR1cyB7XG4gICAgICBmb250LXNpemU6IDEwcHg7XG4gICAgfVxuXG4gICAgLm1lc3NhZ2UtaW5wdXQtY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDE2cHggMjRweDtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlN2ViO1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgfVxuXG4gICAgLmlucHV0LXdyYXBwZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBnYXA6IDEycHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjNmNGY2O1xuICAgICAgYm9yZGVyLXJhZGl1czogMjRweDtcbiAgICAgIHBhZGRpbmc6IDhweCAxNnB4O1xuICAgIH1cblxuICAgIC5hdHRhY2htZW50LWJ0biwgLmVtb2ppLWJ0biB7XG4gICAgICB3aWR0aDogMzJweDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgICB9XG5cbiAgICAuYXR0YWNobWVudC1idG46aG92ZXIsIC5lbW9qaS1idG46aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogI2U1ZTdlYjtcbiAgICAgIGNvbG9yOiAjMzc0MTUxO1xuICAgIH1cblxuICAgIC5tZXNzYWdlLWlucHV0IHtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIHBhZGRpbmc6IDhweCAwO1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG5cbiAgICAubWVzc2FnZS1pbnB1dDo6cGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICM5Y2EzYWY7XG4gICAgfVxuXG4gICAgLnNlbmQtYnRuIHtcbiAgICAgIHdpZHRoOiAzMnB4O1xuICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzY2N2VlYSAwJSwgIzc2NGJhMiAxMDAlKTtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICAgIH1cblxuICAgIC5zZW5kLWJ0bjpob3Zlcjpub3QoOmRpc2FibGVkKSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xuICAgICAgYm94LXNoYWRvdzogMCA0cHggMTJweCByZ2JhKDEwMiwgMTI2LCAyMzQsIDAuMyk7XG4gICAgfVxuXG4gICAgLnNlbmQtYnRuOmRpc2FibGVkIHtcbiAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgfVxuXG4gICAgLm5vLXJvb20tc2VsZWN0ZWQge1xuICAgICAgZmxleDogMTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjlmYWZiO1xuICAgIH1cblxuICAgIC53ZWxjb21lLWNvbnRlbnQge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICM2YjcyODA7XG4gICAgfVxuXG4gICAgLndlbGNvbWUtaWNvbiB7XG4gICAgICBmb250LXNpemU6IDY0cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgICAgY29sb3I6ICNkMWQ1ZGI7XG4gICAgfVxuXG4gICAgLndlbGNvbWUtY29udGVudCBoMiB7XG4gICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgbWFyZ2luOiAwIDAgOHB4IDA7XG4gICAgICBjb2xvcjogIzM3NDE1MTtcbiAgICB9XG5cbiAgICAud2VsY29tZS1jb250ZW50IHAge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgZmFkZUluIHtcbiAgICAgIGZyb20geyBvcGFjaXR5OiAwOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMTBweCk7IH1cbiAgICAgIHRvIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gICAgfVxuXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuY2hhdC1oZWFkZXIge1xuICAgICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICAgICB9XG5cbiAgICAgIC5tZXNzYWdlcy1jb250YWluZXIge1xuICAgICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XG4gICAgICB9XG5cbiAgICAgIC5tZXNzYWdlLWlucHV0LWNvbnRhaW5lciB7XG4gICAgICAgIHBhZGRpbmc6IDEycHggMTZweDtcbiAgICAgIH1cblxuICAgICAgLm1lc3NhZ2UtYnViYmxlIHtcbiAgICAgICAgbWF4LXdpZHRoOiA4NSU7XG4gICAgICB9XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","getRoomStatusText","room_r2","participants","length","ɵɵelement","ɵɵproperty","getSenderAvatar","message_r4","senderId","ɵɵsanitizeUrl","getSenderName","ɵɵtextInterpolate","ɵɵtemplate","ChatWindowComponent_div_0_div_20_div_2_Template","ChatWindowComponent_div_0_div_20_i_8_Template","ɵɵclassProp","currentUser","id","content","formatMessageTime","timestamp","ChatWindowComponent_div_0_span_8_Template","ChatWindowComponent_div_0_span_9_Template","ChatWindowComponent_div_0_div_20_Template","ɵɵtwoWayListener","ChatWindowComponent_div_0_Template_input_ngModelChange_25_listener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","newMessage","ɵɵresetView","ɵɵlistener","ChatWindowComponent_div_0_Template_input_keydown_enter_25_listener","sendMessage","ChatWindowComponent_div_0_Template_input_input_25_listener","onTyping","ChatWindowComponent_div_0_Template_button_click_29_listener","getRoomAvatar","name","type","messages","trackByMessageId","ɵɵtwoWayProperty","trim","ChatWindowComponent","constructor","chatService","shouldScrollToBottom","activeRoom$","getActiveRoom","getCurrentUser","ngOnInit","subscribe","ngAfterViewChecked","scrollToBottom","room","unsubscribe","startTyping","setTimeout","stopTyping","avatar","otherParticipant","find","p","status","lastSeen","now","Date","diff","getTime","hours","Math","floor","days","user","getUserById","minutes","toLocaleTimeString","hour","minute","toLocaleDateString","index","message","messagesContainer","element","nativeElement","scrollTop","scrollHeight","ɵɵdirectiveInject","i1","ChatService","selectors","viewQuery","ChatWindowComponent_Query","rf","ctx","ChatWindowComponent_div_0_Template","ChatWindowComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵpipeBind1","noRoomSelected_r5","i2","NgForOf","NgIf","AsyncPipe","i3","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\Purvesh\\Downloads\\project-bolt-sb1-5grbemnl\\project\\src\\app\\components\\chat-window\\chat-window.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChatService } from '../../services/chat.service';\nimport { ChatRoom, Message, User } from '../../models/chat.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chat-window',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"chat-window\" *ngIf=\"activeRoom$ | async as room; else noRoomSelected\">\n      <div class=\"chat-header\">\n        <div class=\"room-info\">\n          <img [src]=\"getRoomAvatar(room)\" [alt]=\"room.name\" class=\"room-avatar\">\n          <div class=\"room-details\">\n            <h3>{{ room.name }}</h3>\n            <p class=\"room-status\">\n              <span *ngIf=\"room.type === 'direct'\">\n                {{ getRoomStatusText(room) }}\n              </span>\n              <span *ngIf=\"room.type === 'group'\">\n                {{ room.participants.length }} members\n              </span>\n            </p>\n          </div>\n        </div>\n        <div class=\"chat-actions\">\n          <button class=\"action-btn\" title=\"Voice Call\">\n            <i class=\"fas fa-phone\"></i>\n          </button>\n          <button class=\"action-btn\" title=\"Video Call\">\n            <i class=\"fas fa-video\"></i>\n          </button>\n          <button class=\"action-btn\" title=\"More Options\">\n            <i class=\"fas fa-ellipsis-v\"></i>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"messages-container\" #messagesContainer>\n        <div class=\"messages-list\">\n          <div \n            *ngFor=\"let message of room.messages; trackBy: trackByMessageId\"\n            class=\"message-wrapper\"\n            [class.own-message]=\"message.senderId === currentUser.id\"\n          >\n            <div class=\"message-bubble\" [class.own]=\"message.senderId === currentUser.id\">\n              <div *ngIf=\"message.senderId !== currentUser.id\" class=\"sender-info\">\n                <img [src]=\"getSenderAvatar(message.senderId)\" [alt]=\"getSenderName(message.senderId)\" class=\"sender-avatar\">\n                <span class=\"sender-name\">{{ getSenderName(message.senderId) }}</span>\n              </div>\n              <div class=\"message-content\">\n                <p>{{ message.content }}</p>\n              </div>\n              <div class=\"message-time\">\n                {{ formatMessageTime(message.timestamp) }}\n                <i *ngIf=\"message.senderId === currentUser.id\" class=\"fas fa-check message-status\"></i>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"message-input-container\">\n        <div class=\"input-wrapper\">\n          <button class=\"attachment-btn\" title=\"Attach File\">\n            <i class=\"fas fa-paperclip\"></i>\n          </button>\n          <input \n            type=\"text\" \n            [(ngModel)]=\"newMessage\" \n            (keydown.enter)=\"sendMessage()\"\n            (input)=\"onTyping()\"\n            placeholder=\"Type a message...\"\n            class=\"message-input\"\n            #messageInput\n          >\n          <button class=\"emoji-btn\" title=\"Add Emoji\">\n            <i class=\"fas fa-smile\"></i>\n          </button>\n          <button \n            class=\"send-btn\" \n            (click)=\"sendMessage()\"\n            [disabled]=\"!newMessage.trim()\"\n            title=\"Send Message\"\n          >\n            <i class=\"fas fa-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <ng-template #noRoomSelected>\n      <div class=\"no-room-selected\">\n        <div class=\"welcome-content\">\n          <i class=\"fas fa-comments welcome-icon\"></i>\n          <h2>Welcome to ChatApp</h2>\n          <p>Select a conversation to start chatting</p>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    .chat-window {\n      flex: 1;\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      background: white;\n    }\n\n    .chat-header {\n      padding: 16px 24px;\n      border-bottom: 1px solid #e5e7eb;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      background: white;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n    }\n\n    .room-info {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n    }\n\n    .room-avatar {\n      width: 40px;\n      height: 40px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n\n    .room-details h3 {\n      margin: 0;\n      font-size: 16px;\n      font-weight: 600;\n      color: #111827;\n    }\n\n    .room-status {\n      margin: 0;\n      font-size: 12px;\n      color: #6b7280;\n    }\n\n    .chat-actions {\n      display: flex;\n      gap: 8px;\n    }\n\n    .action-btn {\n      width: 36px;\n      height: 36px;\n      border: none;\n      background: #f3f4f6;\n      color: #6b7280;\n      border-radius: 50%;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ease;\n    }\n\n    .action-btn:hover {\n      background: #e5e7eb;\n      color: #374151;\n    }\n\n    .messages-container {\n      flex: 1;\n      overflow-y: auto;\n      padding: 16px 24px;\n      background: #f9fafb;\n    }\n\n    .messages-list {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n    }\n\n    .message-wrapper {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .message-wrapper.own-message {\n      align-items: flex-end;\n    }\n\n    .message-bubble {\n      max-width: 70%;\n      background: white;\n      border-radius: 18px;\n      padding: 12px 16px;\n      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n      animation: fadeIn 0.3s ease;\n    }\n\n    .message-bubble.own {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n    }\n\n    .sender-info {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      margin-bottom: 8px;\n    }\n\n    .sender-avatar {\n      width: 20px;\n      height: 20px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n\n    .sender-name {\n      font-size: 12px;\n      font-weight: 600;\n      color: #667eea;\n    }\n\n    .message-content p {\n      margin: 0;\n      line-height: 1.4;\n      word-wrap: break-word;\n    }\n\n    .message-time {\n      font-size: 11px;\n      color: #9ca3af;\n      margin-top: 4px;\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      justify-content: flex-end;\n    }\n\n    .message-bubble.own .message-time {\n      color: rgba(255, 255, 255, 0.7);\n    }\n\n    .message-status {\n      font-size: 10px;\n    }\n\n    .message-input-container {\n      padding: 16px 24px;\n      border-top: 1px solid #e5e7eb;\n      background: white;\n    }\n\n    .input-wrapper {\n      display: flex;\n      align-items: center;\n      gap: 12px;\n      background: #f3f4f6;\n      border-radius: 24px;\n      padding: 8px 16px;\n    }\n\n    .attachment-btn, .emoji-btn {\n      width: 32px;\n      height: 32px;\n      border: none;\n      background: transparent;\n      color: #6b7280;\n      border-radius: 50%;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ease;\n    }\n\n    .attachment-btn:hover, .emoji-btn:hover {\n      background: #e5e7eb;\n      color: #374151;\n    }\n\n    .message-input {\n      flex: 1;\n      border: none;\n      background: transparent;\n      font-size: 14px;\n      padding: 8px 0;\n      outline: none;\n    }\n\n    .message-input::placeholder {\n      color: #9ca3af;\n    }\n\n    .send-btn {\n      width: 32px;\n      height: 32px;\n      border: none;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      border-radius: 50%;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.2s ease;\n    }\n\n    .send-btn:hover:not(:disabled) {\n      transform: scale(1.05);\n      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n    }\n\n    .send-btn:disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n\n    .no-room-selected {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background: #f9fafb;\n    }\n\n    .welcome-content {\n      text-align: center;\n      color: #6b7280;\n    }\n\n    .welcome-icon {\n      font-size: 64px;\n      margin-bottom: 16px;\n      color: #d1d5db;\n    }\n\n    .welcome-content h2 {\n      font-size: 24px;\n      font-weight: 600;\n      margin: 0 0 8px 0;\n      color: #374151;\n    }\n\n    .welcome-content p {\n      font-size: 16px;\n      margin: 0;\n    }\n\n    @keyframes fadeIn {\n      from { opacity: 0; transform: translateY(10px); }\n      to { opacity: 1; transform: translateY(0); }\n    }\n\n    @media (max-width: 768px) {\n      .chat-header {\n        padding: 12px 16px;\n      }\n\n      .messages-container {\n        padding: 12px 16px;\n      }\n\n      .message-input-container {\n        padding: 12px 16px;\n      }\n\n      .message-bubble {\n        max-width: 85%;\n      }\n    }\n  `]\n})\nexport class ChatWindowComponent implements OnInit, AfterViewChecked {\n  @ViewChild('messagesContainer') messagesContainer!: ElementRef;\n  @ViewChild('messageInput') messageInput!: ElementRef;\n\n  activeRoom$: Observable<ChatRoom | null>;\n  currentUser: User;\n  newMessage: string = '';\n  private shouldScrollToBottom = false;\n\n  constructor(private chatService: ChatService) {\n    this.activeRoom$ = this.chatService.getActiveRoom();\n    this.currentUser = this.chatService.getCurrentUser();\n  }\n\n  ngOnInit(): void {\n    this.activeRoom$.subscribe(() => {\n      this.shouldScrollToBottom = true;\n    });\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n\n  sendMessage(): void {\n    if (this.newMessage.trim()) {\n      this.chatService.getActiveRoom().subscribe(room => {\n        if (room) {\n          this.chatService.sendMessage(room.id, this.newMessage);\n          this.newMessage = '';\n          this.shouldScrollToBottom = true;\n        }\n      }).unsubscribe();\n    }\n  }\n\n  onTyping(): void {\n    this.chatService.getActiveRoom().subscribe(room => {\n      if (room) {\n        this.chatService.startTyping(room.id);\n        // Stop typing after 3 seconds of inactivity\n        setTimeout(() => {\n          this.chatService.stopTyping(room.id);\n        }, 3000);\n      }\n    }).unsubscribe();\n  }\n\n  getRoomAvatar(room: ChatRoom): string {\n    if (room.type === 'group') {\n      return room.avatar || 'https://images.pexels.com/photos/1181263/pexels-photo-1181263.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&dpr=1';\n    } else {\n      const otherParticipant = room.participants.find(p => p.id !== this.currentUser.id);\n      return otherParticipant?.avatar || 'https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&dpr=1';\n    }\n  }\n\n  getRoomStatusText(room: ChatRoom): string {\n    if (room.type === 'group') return '';\n    \n    const otherParticipant = room.participants.find(p => p.id !== this.currentUser.id);\n    if (!otherParticipant) return '';\n\n    switch (otherParticipant.status) {\n      case 'online':\n        return 'Online';\n      case 'away':\n        return 'Away';\n      case 'offline':\n        if (otherParticipant.lastSeen) {\n          const now = new Date();\n          const diff = now.getTime() - otherParticipant.lastSeen.getTime();\n          const hours = Math.floor(diff / 3600000);\n          const days = Math.floor(diff / 86400000);\n          \n          if (hours < 1) return 'Last seen recently';\n          if (hours < 24) return `Last seen ${hours}h ago`;\n          return `Last seen ${days}d ago`;\n        }\n        return 'Offline';\n      default:\n        return '';\n    }\n  }\n\n  getSenderAvatar(senderId: string): string {\n    const user = this.chatService.getUserById(senderId);\n    return user?.avatar || 'https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&w=150&h=150&dpr=1';\n  }\n\n  getSenderName(senderId: string): string {\n    const user = this.chatService.getUserById(senderId);\n    return user?.name || 'Unknown User';\n  }\n\n  formatMessageTime(timestamp: Date): string {\n    const now = new Date();\n    const diff = now.getTime() - timestamp.getTime();\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n\n    if (minutes < 1) return 'now';\n    if (minutes < 60) return `${minutes}m ago`;\n    if (hours < 24) return timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    \n    return timestamp.toLocaleDateString();\n  }\n\n  trackByMessageId(index: number, message: Message): string {\n    return message.id;\n  }\n\n  private scrollToBottom(): void {\n    if (this.messagesContainer) {\n      const element = this.messagesContainer.nativeElement;\n      element.scrollTop = element.scrollHeight;\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}